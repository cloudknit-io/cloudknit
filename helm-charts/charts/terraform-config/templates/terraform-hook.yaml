---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: "{{ .Values.customer_id }}-{{ .Values.env_name}}-terraformconfig-{{ .Values.env_name}}-"
  namespace: argo
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "1"
  labels:
    workflows.argoproj.io/completed: 'false'
spec:
  entrypoint: update
  volumes:
    - name: github-ssh-key-mount
      secret:
        secretName: github-ssh-key
        defaultMode: 384
  arguments:
    parameters:
      - name: module_source
        value: "{{ .Values.module.source }}"
      - name: module_source_path
        value: "{{ .Values.module.path }}"
  templates:
    - name: update
      steps:
        - - name: plan
            templateRef:
              name: workflow-template-terraform
              template: run
            arguments:
              parameters:
                - name: module_source
                  value: "{{ .Values.module.source }}"
                - name: module_source_path
                  value: "{{ .Values.module.path }}"
                - name: is_apply
                  value: 0
                - name: customer_id
                  value: "{{ .Values.customer_id }}"
                - name: env_name
                  value: "{{ .Values.env_name }}"
        - - name: approve
            template: approve
            when: "{{` {{steps.plan.outputs.parameters.planCode}} == 2 `}}"
        - - name: apply
            templateRef:
              name: workflow-template-terraform
              template: run
            arguments:
              parameters:
                - name: module_source
                  value: "{{ .Values.module.source }}"
                - name: module_source_path
                  value: "{{ .Values.module.path }}"
                - name: is_apply
                  value: 1
                - name: customer_id
                  value: "{{ .Values.customer_id }}"
                - name: env_name
                  value: "{{ .Values.env_name }}"
            when: "{{` {{steps.plan.outputs.parameters.planCode}} == 2 `}}"


    - name: approve
      suspend: {}
