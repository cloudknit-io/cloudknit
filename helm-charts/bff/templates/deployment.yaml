apiVersion: apps/v1
kind: Deployment
metadata:
  name: zlifecycle-web-bff
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: zlifecycle-web-bff
  template:
    metadata:
     labels:
        app: zlifecycle-web-bff
    spec:
      containers:
        - name: zlifecycle-web-bff
          env:
            - name: PORT
              value: "8080"
            - name: COMPANY
              value: {{ .Values.company }}
            - name: SITE_URL
              value: {{ .Values.protocol | default "https://" }}{{ .Values.domain }}
            - name: COOKIE_SAME_SITE
              value: "lax"
            - name: COOKIE_DOMAIN
              value: {{ .Values.domain }}
            - name: COOKIE_SECRET
              value: "test"
            - name: ARGO_WORKFLOW_API_URL
              value: {{ .Values.argoWorkflowApiUrl }}
            - name: ARGO_CD_API_URL
              value: {{ .Values.argocd.urlWithProtocol }}
            - name: ZLIFECYCLE_API_URL
              value: {{ .Values.zlifecycleApiUrl }}
            - name: ZLIFECYCLE_STATE_MANAGER_URL
              value: {{ .Values.zlifecycleStateManagerUrl }}
            - name: ZLIFECYCLE_EVENT_API_URL
              value: {{ .Values.zlifecycleEventApiUrl }}
            - name: AUTH0_WEB_BASE_URL
              value: {{ .Values.auth0.web.baseUrl }}
            - name: AUTH0_WEB_CLIENT_ID
              value: {{ .Values.auth0.web.clientId }}
            - name: AUTH0_WEB_SECRET
              value: {{ .Values.auth0.web.secret }}
            - name: AUTH0_API_CLIENT_ID
              value: {{ .Values.auth0.api.clientId }}
            - name: AUTH0_API_SECRET
              value: {{ .Values.auth0.api.secret }}
            - name: AUTH0_API_AUDIENCE
              value: {{ .Values.auth0.api.audience }}
            - name: AUTH0_ISSUER_BASE_URL
              value: {{ .Values.auth0.issuerBaseUrl }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
          command: [ "/bin/sh", "-c" ]
          args:
            - NODE_ENV=development npm run server
          imagePullPolicy: Always
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
