// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/compuzest/zlifecycle-il-operator/controllers/util/github (interfaces: RepositoryApi)

// Package github is a generated GoMock package.
package github

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/v32/github"
)

// MockRepositoryApi is a mock of RepositoryApi interface.
type MockRepositoryApi struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryApiMockRecorder
}

// MockRepositoryApiMockRecorder is the mock recorder for MockRepositoryApi.
type MockRepositoryApiMockRecorder struct {
	mock *MockRepositoryApi
}

// NewMockRepositoryApi creates a new mock instance.
func NewMockRepositoryApi(ctrl *gomock.Controller) *MockRepositoryApi {
	mock := &MockRepositoryApi{ctrl: ctrl}
	mock.recorder = &MockRepositoryApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryApi) EXPECT() *MockRepositoryApiMockRecorder {
	return m.recorder
}

// CreateHook mocks base method.
func (m *MockRepositoryApi) CreateHook(arg0, arg1 string, arg2 *github.Hook) (*github.Hook, *github.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHook", arg0, arg1, arg2)
	ret0, _ := ret[0].(*github.Hook)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateHook indicates an expected call of CreateHook.
func (mr *MockRepositoryApiMockRecorder) CreateHook(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHook", reflect.TypeOf((*MockRepositoryApi)(nil).CreateHook), arg0, arg1, arg2)
}

// ListHooks mocks base method.
func (m *MockRepositoryApi) ListHooks(arg0, arg1 string, arg2 *github.ListOptions) ([]*github.Hook, *github.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListHooks", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*github.Hook)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListHooks indicates an expected call of ListHooks.
func (mr *MockRepositoryApiMockRecorder) ListHooks(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListHooks", reflect.TypeOf((*MockRepositoryApi)(nil).ListHooks), arg0, arg1, arg2)
}
