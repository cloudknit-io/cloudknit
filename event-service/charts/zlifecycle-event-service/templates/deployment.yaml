apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zlifecycle-event-service.fullname" . }}
  labels:
    {{- include "zlifecycle-event-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "zlifecycle-event-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zlifecycle-event-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zlifecycle-event-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: zlifecycle-event-service-db-migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["--migrate", "up"]
          env:
            - name: DB_HOST
              value: {{ .Values.env.DB_HOST }}
            - name: DB_PORT
              value: {{ .Values.env.DB_PORT }}
            - name: DB_USERNAME
              value: {{ .Values.env.DB_USERNAME }}
            - name: DB_PASSWORD
              value: {{ .Values.env.DB_PASSWORD }}
            - name: DB_NAME
              value: {{ .Values.env.DB_NAME }}
            - name: DB_DRIVER
              value: {{ .Values.env.DB_DRIVER }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: DB_HOST
              value: {{ .Values.env.DB_HOST }}
            - name: DB_PORT
              value: {{ .Values.env.DB_PORT }}
            - name: DB_USERNAME
              value: {{ .Values.env.DB_USERNAME }}
            - name: DB_PASSWORD
              value: {{ .Values.env.DB_PASSWORD }}
            - name: DB_NAME
              value: {{ .Values.env.DB_NAME }}
            - name: DB_DRIVER
              value: {{ .Values.env.DB_DRIVER }}
            - name: ENABLE_NEW_RELIC
              value: {{ quote .Values.env.ENABLE_NEW_RELIC }}
            - name: NEW_RELIC_API_KEY
              value: {{ .Values.env.NEW_RELIC_API_KEY }}
            - name: ENVIRONMENT
              value: {{ .Values.env.ENVIRONMENT }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
