# Copyright (C) 2020 CompuZest, Inc. - All Rights Reserved
#
# Unauthorized copying of this file, via any medium, is strictly prohibited
# Proprietary and confidential
#
# NOTICE: All information contained herein is, and remains the property of
# CompuZest, Inc. The intellectual and technical concepts contained herein are
# proprietary to CompuZest, Inc. and are protected by trade secret or copyright
# law. Dissemination of this information or reproduction of this material is
# strictly forbidden unless prior written permission is obtained from CompuZest, Inc.
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: terraform-run-template
  namespace: argocd
spec:
  entrypoint: run
  templates:
    - name: run
      inputs:
        parameters:
          - name: team_name
          - name: env_name
          - name: config_name
          - name: module_source
          - name: module_source_path
          - name: variables_file_source
          - name: variables_file_path
          - name: is_apply
          - name: lock_state
            value: "true"
          - name: is_sync
            value: "0"
        artifacts:
          - name: terraform-config
            path: "/home"
            git:
              repo: "{{inputs.parameters.module_source}}"
              sshPrivateKeySecret:
                name: github-ssh-key
                key: id_rsa
              insecureIgnoreHostKey: true
          - name: terraform-variables
            path: "/home/terraform-config/vars"
            git:
              repo: "{{inputs.parameters.variables_file_source}}"
              sshPrivateKeySecret:
                name: github-ssh-key
                key: id_rsa
              insecureIgnoreHostKey: true
      serviceAccountName: argo
      script:
        imagePullPolicy: Always
        image: shahadarsh/terraform:latest
        cmd:
          - sh
        source: |
          ./run_terraform.sh "{{inputs.parameters.team_name}}" "{{inputs.parameters.env_name}}" "{{inputs.parameters.config_name}}" "{{inputs.parameters.module_source}}" "{{inputs.parameters.module_source_path}}" "{{inputs.parameters.variables_file_source}}" "{{inputs.parameters.variables_file_path}}" "{{inputs.parameters.is_apply}}" "{{inputs.parameters.lock_state}}" "{{inputs.parameters.is_sync}}"
        env:
          - name: CUSTOMER_AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-creds
                key: aws_access_key_id
          - name: CUSTOMER_AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-creds
                key: aws_secret_access_key
          - name: SHARED_AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: shared-aws-creds
                key: aws_access_key_id
          - name: SHARED_AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: shared-aws-creds
                key: aws_secret_access_key
        volumeMounts:
          - name: github-ssh-key-mount
            mountPath: "/root/ssh_secret"
            readOnly: false
          - name: tmp
            mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      outputs:
        parameters:
          - name: planCode
            valueFrom:
              path: /tmp/plan_code.txt
            globalName: plan-code
