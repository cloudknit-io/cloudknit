name: il-operator - main build
on:
  push:
    branches:
      - main
    paths:
      - 'il-operator/**'
      - .github/workflows/il-operator-main.yaml
  pull_request:
    branches:
      - main
    paths:
      - 'il-operator/**'
      - .github/workflows/il-operator-main.yaml

env:
  module_name: github.com/CompuZest/zlifecycle-il-operator  # from go.mod
jobs:
  build-test-push:
    name: Build, test, and push
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '^1.18'  # should match Dockerfile and go.mod

      - run: go version
      - run: echo "GOPATH=${GITHUB_WORKSPACE}/go" >> $GITHUB_ENV
      - run: echo "${{ env.GOPATH }}/bin" >> $GITHUB_PATH
      - run: go env

      - uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/${{ env.module_name }}

      - name: Set variables
        run: |
          VER=$(cat .version)
          echo "VERSION=$VER" >> $GITHUB_ENV
        working-directory: ${{ env.GOPATH }}/src/${{ env.module_name }}/il-operator

      # Login to ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.7.0
      - run: go install github.com/golang/mock/mockgen@v1.6.0
      - run: make deps
        working-directory: ${{ env.GOPATH }}/src/${{ env.module_name }}/il-operator
      - run: go mod tidy
        working-directory: ${{ env.GOPATH }}/src/${{ env.module_name }}/il-operator
        #- run: make check
        #working-directory: ${{ env.GOPATH }}/src/${{ env.module_name }}/il-operator
      - run: make docker-build DOCKER_TAG=${{ env.VERSION }}
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.GOPATH }}/src/${{ env.module_name }}/il-operator
      - run: make docker-push DOCKER_TAG=${{ env.VERSION }}
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.GOPATH }}/src/${{ env.module_name }}/il-operator
        env:
          ECR_REPO: ${{ steps.login-ecr.outputs.registry }}
      - name: Send Slack Notfication
        uses: ravsamhq/notify-slack-action@master
        if: always()
        with:
          status: ${{ job.status }}
          notify_when: 'failure,warnings' # default is 'success,failure,warnings'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
